<Window x:Class="PresentationLayer.CustomerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PresentationLayer"
        d:DataContext="{d:DesignInstance local:CustomerWindow}"
        mc:Ignorable="d"
        Title="CustomerWindow" Height="700" Width="1000" Loaded="Window_Loaded" Closed="Window_Closed">
    <Window.Resources>
        <SolidColorBrush x:Key="readOnlyColor"/>
    </Window.Resources>
    <Grid Width="1000" Height="700">

        <!--Grid-->
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>    <!--0-->
            <RowDefinition Height="30"/>    <!--1-->
            <RowDefinition Height="30"/>    <!--2-->
            <RowDefinition Height="30"/>    <!--3-->
            <RowDefinition Height="10"/>    <!--4-->
            <RowDefinition Height="30"/>    <!--5-->
            <RowDefinition Height="10"/>    <!--6-->
            <RowDefinition Height="30"/>    <!--7-->
            <RowDefinition Height="10"/>    <!--8-->
            <RowDefinition Height="30"/>    <!--9-->
            <RowDefinition Height="10"/>    <!--11-->
            <RowDefinition Height="30"/>    <!--12-->
            <RowDefinition Height="10"/>    <!--13-->
            <RowDefinition Height="30"/>    <!--14-->
            <RowDefinition Height="10"/>    <!--15-->
            <RowDefinition Height="30"/>    <!--16-->
            <RowDefinition Height="10"/>    <!--17-->
            <RowDefinition Height="30"/>    <!--18-->
            <RowDefinition Height="10"/>    <!--19-->
            <RowDefinition Height="30"/>    <!--20-->
            <RowDefinition Height="10"/>    <!--21-->
            <RowDefinition Height="30"/>    <!--22-->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="50"/>
        </Grid.ColumnDefinitions>
        
        <!--TextBox Search-->
        <TextBox Grid.Row="1"
                 Grid.Column="5"
                 Grid.ColumnSpan="3"
                 x:Name="Txt_SearchCustomer"
                 TextWrapping="Wrap"
                 FontSize="16"
                 BorderThickness="0,0,0,1">
            <TextBox.Style>
                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                    <Style.Resources>
                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                            <VisualBrush.Visual>
                                <Label Content="Search" Foreground="LightGray" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        
        <!--Button Search-->
        <Button Grid.Row="1" 
                Grid.Column="9"
                x:Name="Cmd_SearchCustomers" 
                Content="Search" 
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_SearchCustomers_Click">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" 
                            Value="5"/>
                </Style>
            </Button.Resources>
        </Button>

        <!--TextBox Title Article-->
        <TextBox Grid.Row="3"
                 Grid.Column="1"
                 Grid.ColumnSpan="7"
                 FontSize="20"
                 FontStyle="Italic"
                 FontStretch="Medium"
                 FontWeight="Bold"
                 TextAlignment="Center"
                 BorderThickness="0,0,0,0">
            Customer
        </TextBox>

        <!--DataGrid Customer-->
        <DataGrid Grid.Row="5" 
                  Grid.RowSpan="10"
                  Grid.Column="1" 
                  Grid.ColumnSpan="7"
                  x:Name="CustomerDataGrid" 
                  BorderThickness="0,0,0,0" 
                  ItemsSource="{Binding Path=Customers}" 
                  AutoGenerateColumns="False" 
                  BeginningEdit="CustomerDataGrid_BeginningEdit"
                  CanUserSortColumns="False"
                  CanUserAddRows="False" 
                  SelectionMode="Single"
        >
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell" >
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            
            <DataGrid.Resources>
                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                    <Setter Property="Padding" Value="-2"/>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <ControlTemplate x:Key="validationTemplate">
                    <DataGridCell>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" 
                                    Value="Red" />
                        </Style>
                    </DataGridCell>
                </ControlTemplate>

                <ControlTemplate x:Key="errorStyle2">
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup HorizontalAlignment="Left" PopupAnimation="Fade" Placement="Bottom" IsOpen="true">
                            <Grid Background="White">
                                <TextBlock Text="{Binding [0].ErrorContent}"/>
                            </Grid>
                        </Popup>
                    </StackPanel>
                </ControlTemplate>
            </DataGrid.Resources>
            <!--<DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ReadOnly}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource readOnlyColor}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>-->
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Path=Id}" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" 
                                    Value="{DynamicResource readOnlyColor}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Read-Only" Binding="{Binding Path=ReadOnly}" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" 
                                    Value="{DynamicResource readOnlyColor}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Clientnr" Binding="{Binding Path=Clientnr, ValidatesOnExceptions=True}" EditingElementStyle="{StaticResource errorStyle}" >
                </DataGridTextColumn>
                <DataGridTextColumn Header="Name / Company" Binding="{Binding Path=Company}"/>
                <DataGridTextColumn Header="First Name" Binding="{Binding Path=FirstName}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" 
                                    Value="Red" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Last Name" Binding="{Binding Path=LastName}"/>
                <DataGridTextColumn Header="Street" Binding="{Binding Path=Address.Street}"/>
                <DataGridTextColumn Header="StreetNo" Binding="{Binding Path=Address.StreetNo}"/>
                <DataGridTextColumn Header="PLZ" Binding="{Binding Path=Address.Plz}"/>
                <DataGridTextColumn Header="City" Binding="{Binding Path=Address.City}"/>
                <DataGridTextColumn Header="E-Mail" Binding="{Binding Path=EMail, ValidatesOnExceptions=True}"/>
                <DataGridTextColumn Header="Website" Binding="{Binding Path=Website}"/>
                <DataGridTextColumn Header="Password" Binding="{Binding Path=Password}"/>
            </DataGrid.Columns>

            <DataGrid.RowValidationRules>
                <local:CustomerValidationRule ValidationStep="CommittedValue"/>
            </DataGrid.RowValidationRules>

            <DataGrid.RowValidationErrorTemplate>
                <ControlTemplate>
                    <Grid Margin="0,-2,0,-2" ToolTip="{Binding RelativeSource={RelativeSource
            FindAncestor, AncestorType={x:Type DataGridRow}},
            Path=(Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red" 
              Width="{TemplateBinding FontSize}" 
              Height="{TemplateBinding FontSize}" />
                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" 
              FontWeight="Bold" Foreground="White" 
              HorizontalAlignment="Center"  />
                    </Grid>
                </ControlTemplate>
            </DataGrid.RowValidationErrorTemplate>

        </DataGrid>


        <!--Button Add-->
        <Button Grid.Row="5" 
                Grid.Column="9" 
                x:Name="Cmd_AddCustomer" 
                Content="Add" 
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_AddCustomer_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Button.Resources>
        </Button>

        <!--Button Save-->
        <Button Grid.Row="7" 
                Grid.Column="9" 
                x:Name="Cmd_SaveCustomer" 
                Content="Save" 
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_SaveCustomer_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Button.Resources>
        </Button>

        <!--Button Modify-->
        <Button Grid.Row="9" 
                Grid.Column="9" 
                x:Name="Cmd_ModifyCustomer" 
                Content="Modify Selected" 
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_ModifyCustomer_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Button.Resources>
        </Button>

        <!--Button Cancel-->
        <Button Grid.Row="13" 
                Grid.Column="9" 
                x:Name="Cmd_Cancel" 
                Content="Cancel" 
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_Cancel_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Button.Resources>
        </Button>

        <!--Button Delete-->
        <Button Grid.Row="11" 
                Grid.Column="9" 
                x:Name="Cmd_DeleteCustomer" 
                Content="Delete"
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_DeleteCustomer_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Button.Resources>
        </Button>

        <!--Button Export JSON -->
        <Button Grid.Row="15" 
                Grid.Column="9" 
                x:Name="Cmd_Export_Json" 
                Content="Export Json" 
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_ExportJson_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Button.Resources>
        </Button>

        <!--Button Export XML -->
        <Button Grid.Row="17" 
                Grid.Column="9" 
                x:Name="Cmd_Export_Xml" 
                Content="Export XML" 
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_ExportXml_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Button.Resources>
        </Button>

        <!--Button Import Json -->
        <Button Grid.Row="19" 
                Grid.Column="9" 
                x:Name="Cmd_Import_Json" 
                Content="Import Json" 
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_ImportJson_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Button.Resources>
        </Button>

        <!--Button Import XML -->
        <Button Grid.Row="21" 
                Grid.Column="9" 
                x:Name="Cmd_Import_Xml" 
                Content="Import XML" 
                FontSize="12" 
                FlowDirection="LeftToRight" 
                Padding="1,1,1,1" 
                UseLayoutRounding="False" 
                BorderThickness="0,0,0,0" 
                Background="#FFD6D6D6" 
                Foreground="Black" 
                Click="Cmd_ImportXml_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Button.Resources>
        </Button>
    </Grid>
</Window>
